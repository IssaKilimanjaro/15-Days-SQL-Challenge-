-- Creating customers table
CREATE TABLE customers (
       customer_id SERIAL PRIMARY KEY,
       first_name VARCHAR(50),
       last_name VARCHAR(50) 
);


-- Populate customers table

INSERT INTO customers (first_name, last_name)

VALUES ('Alice', 'Smith'),
      	('Faisal', 'Salum'),
        ('Prince', 'Dube'),
        ('Pascal', 'Msindo'),
        ('Yeison', 'Fuentes'),
        ('Franklin', 'Navaro'),
        ('Yahaya', 'Zaid'),
      	('Cheikh', 'Sidibe'),
      	('Sospeter', 'Bajana'),
       	('Yanick', 'Bangala');


-- create orders table

CREATE TABLE Orders (
       OrderID INT PRIMARY KEY,
       CustomerID INT,
       OrderDate DATE,
       TotalAmount DECIMAL(10, 2),
       FOREIGN KEY (CustomerID) REFERENCES Customers(customer_id)
);


-- Populate orders table

INSERT INTO Orders (OrderID, CustomerID, OrderDate, TotalAmount)

VALUES (101, 1, ‘2024-02-25’, 150.00),

       (102, 2, ‘2024-02-26’, 200.50),

       (103, 1, ‘2024-02-27’, 75.25),

       (104, 3, ‘2024-02-28’, 300.75)

       (105, 4, ‘2024-02-29’, 45.25),

       (106, 1, ‘2024-03-01', 75.75),

       (107, 5, ‘2024-03-02’, 80.00),

       (108, 1, ‘2024-03-02’, 125.75),

       (109, 1, ‘2024-03-03’, 65.75),

       (110, 3, ‘2024-03-04’, 205.25);

		

-- Query customers table by using to see all data

SELECT *

FROM customers;



-- Query orders table to see all data in the table

SELECT *

FROM orders;



-- joining customers and orders table

SELECT orders.orderID, customers.last_name, orders.orderDate

FROM orders

INNER JOIN customers ON orders.customerID = customers.customersID;





--aggreagate data by using count and sum

SELECT customersID, COUNT(orderID) as NumbersOfOrders, SUM(TotalAmount) as TotalSpent

FROM Orders

GROUP BY customersID;



-- calculate maximum total amount

SELECT MAX(TotalAmount) as MaximumTotalAmount

FROM orders;



-- Calculate Minimum total amount

SELECT MIN(TotalAmount) as MinimumTotalAmount

FROM orders;




